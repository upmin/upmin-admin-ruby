%h4
  Search
  = klass.humanized_name

-# Upmin default search uses the ransack gem, see: https://github.com/activerecord-hackery/ransack
= form_tag(klass.search_path, method: :get) do
  - klass.attributes.each do |attr_name|
    - type = klass.attribute_type(attr_name)

    -# TODO(jon): Break these into partials possibly?
    - if type == :string
      .form-group
        = label(:q, "#{attr_name}_cont", attr_name.to_s.capitalize.tr("_", " "))
        = text_field(:q, "#{attr_name}_cont", class: "form-control")

    - if type == :integer
      .form-group
        = label(:q, "#{attr_name}_cont", attr_name.to_s.capitalize.tr("_", " "))
        .input-group
          .input-group-addon From
          = number_field(:q, "#{attr_name}_gteq", class: "form-control")
          .input-group-addon to
          = number_field(:q, "#{attr_name}_lteq", class: "form-control")

    - if type == :datetime && Rails::VERSION::MAJOR == 4
      -# TODO(jon): Add date fields to search boxes for Rails 3
      .form-group
        = label(:q, "#{attr_name}_cont", attr_name.to_s.capitalize.tr("_", " "))
        %br
        From
        = date_field(:q, "#{attr_name}_gteq", class: "form-control")
        To
        = date_field(:q, "#{attr_name}_lteq", class: "form-control")

    - if type == :enum
      .form-group
        = label(:q, "#{attr_name}_cont", attr_name.to_s.capitalize.gsub("_", " "))
        = select(:q, "#{attr_name}_eq", klass.model_class.defined_enums[attr_name.to_s], { include_blank: true }, { class: "form-control" })

  = submit_tag("Search", class: "btn btn-primary btn-block")
  = link_to("Clear All", klass.search_path, class: "btn btn-default btn-block")
